generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Summary {
  id           String        @id @default(uuid())
  content      String
  fileName     String
  userId       String?
  anonymousId  String?
  createdAt    DateTime      @default(now())
  chatMessages ChatMessage[]
  user         User?         @relation(fields: [userId], references: [id])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  summaries     Summary[]
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String?
  access_token             String?
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String?
  session_state            String?
  refresh_token_expires_in Int?
  user                     User    @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model ChatMessage {
  id         String   @id @default(cuid())
  summaryId  String
  role       String
  content    String
  createdAt  DateTime @default(now())
  summary    Summary  @relation(fields: [summaryId], references: [id])
}

model SaveSummaryAndChat {
  id        String   @id @default(uuid())
  summaryId  String
  userId    String
  fileName  String
  content   String
  messages  Json
  createdAt DateTime @default(now())
}